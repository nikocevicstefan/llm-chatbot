services:
  postgres:
    image: postgres:15-alpine
    container_name: llm-chatbot-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-llm_chatbot_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme_secure_password_2024}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: llm-chatbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  adminer:
    image: adminer:4-standalone
    container_name: llm-chatbot-adminer
    # SECURITY: Only expose on localhost, never in production
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
      ADMINER_PLUGINS: tables-filter tinymce
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - dev
      - adminer

  chatbot:
    build: .
    container_name: llm-chatbot-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: llm_chatbot_dev
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-changeme_secure_password_2024}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    profiles:
      - app

  nginx:
    image: nginx:alpine
    container_name: llm-chatbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - chatbot
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local